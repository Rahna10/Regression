Data set consist of two inputs and a output.Hence we have to apply multiple linear regression.
Multiple linear model steps are:
1. Data preprocessing
   -Importing libraries and data set.
   -Finding correlation
   -avoid dummy variable trap
   -Splitting dataset into train and test set.
2. Fitting multiple linear regression to training data.
3. Predicting the test results.

Code:

import matplotlib.pyplot as plt
from sklearn import metrics,linear_model
from sklearn.model_selection import train_test_split
import pandas as pd
import io
from sklearn.metrics import mean_squared_error, r2_score

from google.colab import files
uploaded=files.upload()
data=pd.read_csv(io.BytesIO(uploaded['Training_Data.csv']))
data.head()
#to find correlation
data.corr()

#to plot figure
plt.figure(figsize=(10,10))
plt.scatter(
    data['X_1'],
    data['Y'],
    c='blue'
)
plt.scatter(
    data['X_2'],
    data['Y'],
    c='magenta'
)
plt.xlabel("X")
plt.ylabel("Y")
plt.show()

#splitting dataset
x=data[["X_1","X_2"]]
y=data[["Y"]]
x_train, x_test,y_train,y_test = train_test_split(x,y,test_size =0.2)

# Fitting and training dataset
regr = linear_model.LinearRegression()
regr.fit(x_train, y_train)
